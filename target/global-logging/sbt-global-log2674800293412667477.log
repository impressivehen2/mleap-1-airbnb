[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.4 (Azul Systems, Inc. Java 17.0.7)
[debug]       Load.loadUnit: plugins took 34.009958ms
[debug]       Load.loadUnit: defsScala took 0.086834ms
[debug] [Loading] Scanning directory /Users/shianghu/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/shianghu/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.963084 ms
[debug]           Load.resolveProject(global-plugins) took 21.123167ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/shianghu/.sbt/1.0/plugins, plugins: List(<none>))) took 37.776375ms
[debug] [Loading] Done in /Users/shianghu/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 47.110875ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.08075ms
[debug]     Load.loadUnit(file:/Users/shianghu/.sbt/1.0/plugins/, ...) took 84.485375ms
[debug]   Load.apply: load took 257.004041ms
[debug]   Load.apply: resolveProjects took 2.667375ms
[debug]   Load.apply: finalTransforms took 25.835334ms
[debug]   Load.apply: config.delegates took 2.554208ms
[debug]   Load.apply: Def.make(settings)... took 169.840541ms
[debug]   Load.apply: structureIndex took 42.599459ms
[debug]   Load.apply: mkStreams took 0.647541ms
[info] loading global plugins from /Users/shianghu/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1080.260375ms
[debug]           Load.loadUnit: plugins took 7.754833ms
[debug]           Load.loadUnit: defsScala took 0.002167ms
[debug] [Loading] Scanning directory /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.235875 ms
[debug]               Load.resolveProject(mleap-1-airbnb-build) took 1.258833ms
[debug]             Load.loadTransitive: finalizeProject(Project(id mleap-1-airbnb-build, base: /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/project, plugins: List(<none>))) took 3.195291ms
[debug] [Loading] Done in /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/project, returning: (mleap-1-airbnb-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4.77025ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.007042ms
[debug]         Load.loadUnit(file:/Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/project/, ...) took 12.868125ms
[debug]       Load.apply: load took 13.669959ms
[debug]       Load.apply: resolveProjects took 0.060625ms
[debug]       Load.apply: finalTransforms took 5.029542ms
[debug]       Load.apply: config.delegates took 0.178458ms
[debug]       Load.apply: Def.make(settings)... took 54.756959ms
[debug]       Load.apply: structureIndex took 12.88ms
[debug]       Load.apply: mkStreams took 0.001791ms
[info] loading project definition from /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 191.069459ms
[debug]     Load.loadUnit: defsScala took 0.00125ms
[debug] [Loading] Scanning directory /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb
[debug]       Load.loadUnit: mkEval took 2.586333ms
[debug] [Loading] Found root project root w/ remaining model,server
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.6095 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.228875ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb, aggregate: List(LocalProject(model), LocalProject(server)), plugins: List(<none>))) took 2.307833ms
[debug] [Loading] Loading project model @ /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/model
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.615083 ms
[debug]       Load.resolveProject(model) took 0.483708ms
[debug] [Loading] Loading project server @ /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/server
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.780916 ms
[debug]       Load.resolveProject(server) took 0.491708ms
[debug] [Loading] Done in /Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb, returning: (root, model, server)
[debug]     Load.loadUnit: loadedProjectsRaw took 77.692542ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.0915ms
[debug]   Load.loadUnit(file:/Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/, ...) took 271.203916ms
[debug] Load.apply: load took 272.416667ms
[debug] Load.apply: resolveProjects took 0.259084ms
[debug] Load.apply: finalTransforms took 7.869416ms
[debug] Load.apply: config.delegates took 0.344208ms
[debug] Load.apply: Def.make(settings)... took 126.135959ms
[debug] Load.apply: structureIndex took 36.639542ms
[debug] Load.apply: mkStreams took 0.001458ms
[info] set current project to mleap-1-airbnb (in build file:/Users/shianghu/Desktop/shawn/Learning/mleap-1-airbnb/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/shianghu/.sbt/1.0/server/d05223211b50763bebb3/sock
[debug] Writing bsp connection file
[info] started sbt server
